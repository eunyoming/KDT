package com.kedu.controller;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.kedu.dao.FileDAO;
import com.kedu.dto.FileDTO;

@Controller
@RequestMapping("/file")
public class FileController {

	@Autowired
	private FileDAO fileDAO;

	@RequestMapping("/upload")
	public String upload(String text, MultipartFile[] files, HttpSession session) throws Exception{
		String realPath = session.getServletContext().getRealPath("upload");
		System.out.println(realPath + " : " + realPath);

		File realPathFile = new File(realPath);
		if(!realPathFile.exists()) {
			realPathFile.mkdir();
		}
		for(MultipartFile file : files) {
			// 파일이 비어있지 않다면
			if(!file.isEmpty()) {
				String oriName = file.getOriginalFilename();
				// UUID : 유니크한 식별자 ID를 만들어내는 함수
				String sysName = UUID.randomUUID() + "_" + oriName;

				// upload 파일에 저장 ( 파일경로 + 파일명 )
				file.transferTo(new File(realPath + "/" + sysName));

				// DB 작업
				fileDAO.insert(new FileDTO(0, text, oriName, sysName, 0));
			}
		}
		return "redirect:/";
	}
	
	@ResponseBody
	@RequestMapping("/list")
	public List<FileDTO> list() {
		return fileDAO.getAllFiles();
	}
	
	@RequestMapping("/download")
	public void download(HttpServletResponse resp, HttpSession session, String sysame, String oriname) throws Exception{
		String realPath = session.getServletContext().getRealPath("upload");
		File target = new File(realPath + "/" + sysname);
		
		// 인코딩
		oriname = new String(oriname.getBytes("utf8"), "ISO-8859-1");
		
		// 헤더로 보낼 데이터
		resp.setHeader("content-disposition", "attachment;filename=\""+oriname+"\"");
		
		// 데이터 통로 열고, 담아서 보내기.
		try(DataInputStream dis = new DataInputStream(new FileInputStream(target));
				DataOutputStream dos = new DataOutputStream(resp.getOutputStream());){
			byte[] fileContents = dis.readAllBytes();
			dos.write(fileContents);
			dos.flush();
		}
	}
	

}
