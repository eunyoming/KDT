/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.108
 * Generated at: 2025-09-15 00:12:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class registerForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/sts3_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Day04_Board_ju/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1757403558891L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Title</title>\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n");
      out.write("          integrity=\"sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr\" crossorigin=\"anonymous\">\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("            integrity=\"sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q\"\n");
      out.write("            crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"\n");
      out.write("            integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n");
      out.write("    <link rel=\"stylesheet\" href=\"../common/css/input.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"registerForm.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"container\">\n");
      out.write("    <div class=\"row title\">\n");
      out.write("        <div class=\"col\">\n");
      out.write("            회원 가입 정보 입력\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <form action=\"/member/register\" method=\"post\" id=\"registerFrm\">\n");
      out.write("        <div class=\"row input\">\n");
      out.write("            <div class=\"col col-2 form-label\">ID</div>\n");
      out.write("            <div class=\"col col-7\">\n");
      out.write("                <input type=\"text\" class=\"form-control\" name=\"id\" placeholder=\"아이디를 입력하세요.\" required>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"col col-3\">\n");
      out.write("                <input type=\"button\" class=\"btn btn-primary\" onclick=\"checkIdDupl()\" value=\"중복확인\">\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <div class=\"col col-2\"></div>\n");
      out.write("            <div class=\"col col-10\" id=\"checkIdDupl\">\n");
      out.write("                아이디 중복확인을 해주세요.\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row input\">\n");
      out.write("            <div class=\"col col-2 form-label\">PW</div>\n");
      out.write("            <div class=\"col col-10\">\n");
      out.write("                <input type=\"password\" class=\"form-control\" name=\"pw\" placeholder=\"비밀번호를 입력하세요\" required>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <div class=\"col col-2\"></div>\n");
      out.write("            <div class=\"col col-10\">\n");
      out.write("                <div id=\"passwordRule\">패스워드는 영문, 숫자, 특수문자를 포함해야합니다.</div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row input\">\n");
      out.write("            <div class=\"col col-2 form-label\">PW확인</div>\n");
      out.write("            <div class=\"col col-10\">\n");
      out.write("                <input type=\"password\" class=\"form-control\" name=\"pwCheck\"\n");
      out.write("                       placeholder=\"비밀번호를 다시 입력하세요.\" required>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row\">\n");
      out.write("            <div class=\"col col-2\"></div>\n");
      out.write("            <div class=\"col col-10\">\n");
      out.write("                <div id=\"passwordDuplicate\">입력된 패스워드가 서로 다릅니다.</div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row input\">\n");
      out.write("            <div class=\"col col-2 form-label\">이름</div>\n");
      out.write("            <div class=\"col col-10\">\n");
      out.write("                <input type=\"text\" class=\"form-control\" name=\"name\" placeholder=\"이름을 입력하세요.(한글 2-6자)\" required>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row input\">\n");
      out.write("            <div class=\"col col-2 form-label\">전화번호</div>\n");
      out.write("            <div class=\"col col-10\">\n");
      out.write("                <input type=\"text\" class=\"form-control\" name=\"phone\" placeholder=\"전화번호를 입력하세요.\" required>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row input\">\n");
      out.write("            <div class=\"col col-2 form-label\">이메일</div>\n");
      out.write("            <div class=\"col col-10\">\n");
      out.write("                <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"이메일을 입력하세요.\">\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row input\">\n");
      out.write("            <div class=\"col col-2 form-label\">우편번호</div>\n");
      out.write("            <div class=\"col col-8\">\n");
      out.write("                <input type=\"text\" class=\"form-control readonly-disabled\" name=\"zipcode\" placeholder=\"우편번호\" readonly>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"col col-2\">\n");
      out.write("                <input type=\"button\" class=\"btn btn-primary\" onclick=\"searchPostcode()\" value=\"찾기\">\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row input\">\n");
      out.write("            <div class=\"col col-2 form-label\">주소</div>\n");
      out.write("            <div class=\"col col-10\">\n");
      out.write("                <input type=\"text\" class=\"form-control readonly-disabled\" name=\"address1\" placeholder=\"주소\" readonly>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row input\">\n");
      out.write("            <div class=\"col col-2 form-label\">상세주소</div>\n");
      out.write("            <div class=\"col col-10\">\n");
      out.write("                <input type=\"text\" class=\"form-control\" name=\"address2\" placeholder=\"상세주소를 입력하세요.\">\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"row regTryBtn\">\n");
      out.write("            <div class=\"col registerBtn\">\n");
      out.write("                <input type=\"submit\" class=\"btn btn-primary\" value=\"회원가입\">\n");
      out.write("            </div>\n");
      out.write("            <div class=\"col tryAgainBtn\">\n");
      out.write("                <input type=\"reset\" class=\"btn btn-outline-primary\" value=\"다시입력\">\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("<script>\n");
      out.write("    function searchPostcode() {\n");
      out.write("        new daum.Postcode({\n");
      out.write("            oncomplete: function (data) {\n");
      out.write("                $(\"[name = zipcode]\").val(data.zonecode);\n");
      out.write("                $(\"[name = address1]\").val(data.address);\n");
      out.write("            }\n");
      out.write("        }).open()\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function beforeSubmit() {\n");
      out.write("        $(\"[name = address1]\").removeAttr(\"disabled\");\n");
      out.write("        $(\"[name = zipCode]\").removeAttr(\"disabled\");\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    let idRegex = /^[a-z\\d_]{4,12}$/;\n");
      out.write("    let passwordRegex = /([^\\w\\s])|([a-zA-Z])|(\\d)/g;\n");
      out.write("    let nameRegex = /^[가-힣]{2,6}$/;\n");
      out.write("    let phoneRegex = /^010(-?\\d{4}){2}$/;\n");
      out.write("    let emailRegex = /^.+@.+(\\.com|\\.co\\.kr)$/;\n");
      out.write("\n");
      out.write("    $(\"[name = id]\").on(\"change\", function () {\n");
      out.write("        $(\"#checkIdDupl\").css(\"display\", \"flex\");\n");
      out.write("        checkIdDuplFlg = false;\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    $(\"[name = pwCheck]\").on(\"keyup\", function () {\n");
      out.write("        checkPassword();\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    $(\"[name = pw]\").on(\"keyup\", function () {\n");
      out.write("        checkPassword();\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    $(\"[name = pwCheck], [name = pw]\").on(\"focus\", function () {\n");
      out.write("        document.addEventListener('keydown', handleSpacebar);\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    $(\"[name = pwCheck], [name = pw]\").on(\"blur\", function () {\n");
      out.write("        document.removeEventListener('keydown', handleSpacebar);\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    function handleSpacebar(event) {\n");
      out.write("        if (event.key === ' ' || event.keyCode === 32) {\n");
      out.write("            event.preventDefault();\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function checkPassword() {\n");
      out.write("        let passwordVal = $(\"[name = pw]\").val();\n");
      out.write("        let passwordCheckVal = $(\"[name = pwCheck]\").val();\n");
      out.write("\n");
      out.write("        if (passwordVal) {\n");
      out.write("            let temp;\n");
      out.write("            let tempFlag = [undefined, undefined, undefined];\n");
      out.write("\n");
      out.write("            while ((temp = passwordRegex.exec(passwordVal)) != null) {\n");
      out.write("                for (let i = 1; i < temp.length; i++) {\n");
      out.write("                    if (!tempFlag[i]) {\n");
      out.write("                        tempFlag[i] = temp[i];\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            if (tempFlag[1] && tempFlag[2] && tempFlag[3]) {\n");
      out.write("                $(\"#passwordRule\").css(\"display\", \"none\");\n");
      out.write("            } else {\n");
      out.write("                $(\"#passwordRule\").css(\"display\", \"block\");\n");
      out.write("                $(\"#passwordDuplicate\").css(\"display\", \"none\");\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        if (passwordVal && passwordCheckVal) {\n");
      out.write("            if (passwordVal != passwordCheckVal) {\n");
      out.write("                $(\"#passwordRule\").css(\"display\", \"none\");\n");
      out.write("                $(\"#passwordDuplicate\").css(\"display\", \"block\");\n");
      out.write("                return false;\n");
      out.write("            } else {\n");
      out.write("                $(\"#passwordDuplicate\").css(\"display\", \"none\");\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        if (!passwordVal && !passwordCheckVal) {\n");
      out.write("            $(\"#passwordRule\").css(\"display\", \"none\");\n");
      out.write("            $(\"#passwordDuplicate\").css(\"display\", \"none\");\n");
      out.write("            return false;\n");
      out.write("        }\n");
      out.write("        return true;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    let checkIdDuplFlg = false;\n");
      out.write("\n");
      out.write("    function checkIdDupl() {\n");
      out.write("        $.ajax({\n");
      out.write("            url: \"/member/idduplcheck\",\n");
      out.write("            data: {\"id\":$(\"[name = id]\").val()}\n");
      out.write("        }).then((res) => {\n");
      out.write("            console.log(res);\n");
      out.write("            if (!res) {\n");
      out.write("                $(\"#checkIdDupl\").css(\"display\", \"none\");\n");
      out.write("                alert(\"중복확인이 완료되었습니다.\");\n");
      out.write("            } else {\n");
      out.write("                $(\"#checkIdDupl\").css(\"display\", \"flex\");\n");
      out.write("                alert(\"이미 존재하는 아이디 입니다.\");\n");
      out.write("                $(\"[name = id]\").val(\"\");\n");
      out.write("            }\n");
      out.write("            checkIdDuplFlg = !res;\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    $(\"#registerFrm\").on(\"submit\", function checkValidation() {\n");
      out.write("        if (idRegex.test($(\"[name = id]\").val()) &&\n");
      out.write("            checkPassword() &&\n");
      out.write("            checkIdDuplFlg &&\n");
      out.write("            nameRegex.test($(\"[name = name]\").val()) &&\n");
      out.write("            emailRegex.test($(\"[name = email]\").val()) &&\n");
      out.write("            phoneRegex.test($(\"[name = phone]\").val())) {\n");
      out.write("            return true;\n");
      out.write("        } else {\n");
      out.write("            alert(\"입력 정보를 다시 확인해주세요.\");\n");
      out.write("            return false;\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
