/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.108
 * Generated at: 2025-09-15 08:35:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.members;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1757403558891L));
    _jspx_dependants.put("jar:file:/C:/sts3_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Day04_Board_eun/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<!-- 부트스트랩 -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<!-- JQuery -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"\r\n");
      out.write("	integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\"\r\n");
      out.write("	crossorigin=\"anonymous\" type=\"text/javascript\"></script>\r\n");
      out.write("<!-- 다음 우편번호 API -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"\r\n");
      out.write("	type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("* {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	width: 700px;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	background: linear-gradient(white, white) padding-box, /* 내부 흰색 */\r\n");
      out.write("    linear-gradient(135deg, rgb(155, 93, 248), rgb(255, 85, 215))\r\n");
      out.write("		border-box; /* 테두리 그라데이션 */\r\n");
      out.write("	border: 2px solid transparent; /* 투명 테두리로 그라데이션 배경 보이게 */\r\n");
      out.write("	background-origin: border-box;\r\n");
      out.write("	background-clip: padding-box, border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container div {\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".row {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 헤더 */\r\n");
      out.write(".header_text {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	background: linear-gradient(135deg, rgb(88, 17, 194), rgb(255, 85, 215));\r\n");
      out.write("	color: white;\r\n");
      out.write("	border-radius: 12px;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* input */\r\n");
      out.write(".input_text {\r\n");
      out.write("	text-align: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".col-2 {\r\n");
      out.write("	text-align: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input {\r\n");
      out.write("	width: 50%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input_addr {\r\n");
      out.write("	width: 80%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 푸터 */\r\n");
      out.write(".join_footer {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 버튼들 */\r\n");
      out.write(".btn {\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	border: 1px solid rgb(255, 85, 215);\r\n");
      out.write("	color: rgb(155, 93, 248);\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	padding-top: 3px;\r\n");
      out.write("	padding-bottom: 3px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<form action=\"/members/insert\" method=\"post\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row join_header g-0\">\r\n");
      out.write("				<div class=\"col-12 header_text pt-2 pb-2\">회원 가입 정보 입력</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row g-0 mb-2\">\r\n");
      out.write("				<div class=\"col-2 input_text pe-3 mb-2 mt-2\">ID</div>\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"text\" class=\"mb-2 mt-2\" placeholder=\"아이디를 입력하세요\"\r\n");
      out.write("						id=\"id\" name=\"id\">\r\n");
      out.write("					<button type=\"button\" class=\"btn\" id=\"duplCheck\">중복확인</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row g-0 mb-2\">\r\n");
      out.write("				<div class=\"col-2 mb-3 input_text pe-3\">PW</div>\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"password\" placeholder=\"비밀번호를 입력하세요\" class=\"input\"\r\n");
      out.write("						id=\"pw\" name=\"pw\">\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row g-0 mb-2\">\r\n");
      out.write("				<div class=\"col-2 mb-3 input_text pe-3\">PW 확인</div>\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"password\" placeholder=\"비밀번호를 다시 입력하세요\" class=\"input\"\r\n");
      out.write("						id=\"pwCheck\" name=\"pwCheck\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row g-0 mb-2\">\r\n");
      out.write("				<div class=\"col-2 mb-3 input_text pe-3\">이름</div>\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"text\" placeholder=\"이름을 입력하세요.\" class=\"input\" id=\"name\"\r\n");
      out.write("						name=\"name\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row g-0 mb-2\">\r\n");
      out.write("				<div class=\"col-2 mb-3 input_text pe-3\">전화번호</div>\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"text\" placeholder=\"전화번호를 입력하세요 (예: 010-1234-1234)\"\r\n");
      out.write("						class=\"input\" id=\"phone\" name=\"phone\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row g-0 mb-2\">\r\n");
      out.write("				<div class=\"col-2 mb-3 input_text pe-3\">이메일</div>\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"text\" placeholder=\"이메일을 입력하세요\" class=\"input\"\r\n");
      out.write("						id=\"email\" name=\"email\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row g-0 mb-2\">\r\n");
      out.write("				<div class=\"col-2 mb-3 input_text pe-3\">우편번호</div>\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"text\" placeholder=\"우편번호\" class=\"input\" id=\"postcode\"\r\n");
      out.write("						name=\"zipcode\"> <input type=\"button\"\r\n");
      out.write("						onclick=\"sample4_execDaumPostcode()\" value=\"찾기\" class=\"btn\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row g-0 mb-2\">\r\n");
      out.write("				<div class=\"col-2 mb-3 input_text pe-3\">주소</div>\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"text\" placeholder=\"주소를 입력하세요\" class=\"input input_addr\"\r\n");
      out.write("						id=\"roadAddress\" name=\"address1\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row g-0 mb-2\">\r\n");
      out.write("				<div class=\"col-2 mb-3 input_text pe-3\">상세주소</div>\r\n");
      out.write("				<div class=\"col\">\r\n");
      out.write("					<input type=\"text\" placeholder=\"상세주소를 입력하세요\"\r\n");
      out.write("						class=\"input input_addr\" id=\"detailAddress\" name=\"address2\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row g-0 mb-2\">\r\n");
      out.write("				<div class=\"col join_footer\">\r\n");
      out.write("					<button type=\"submit\" class=\"btn\" id=\"joinBtn\">회원가입</button>\r\n");
      out.write("					<button type=\"reset\" class=\"btn\">다시입력</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		// 아이디 중복체크 여부 확인하는 변수\r\n");
      out.write("		let isIdChecked = false;\r\n");
      out.write("\r\n");
      out.write("		// true로 만들어주는 함수 하나 생성\r\n");
      out.write("		function isIdCheckedToTrue() {\r\n");
      out.write("			return true;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 다음 우편번호 API\r\n");
      out.write("		function sample4_execDaumPostcode() {\r\n");
      out.write("			new daum.Postcode({\r\n");
      out.write("				oncomplete : function(data) {\r\n");
      out.write("					// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("					// 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("					$(\"#postcode\").val(data.zonecode);\r\n");
      out.write("					$(\"#roadAddress\").val(data.roadAddress);\r\n");
      out.write("				}\r\n");
      out.write("			}).open();\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// ID 중복체크 팝업창\r\n");
      out.write("		$(\"#duplCheck\").on(\r\n");
      out.write("				\"click\",\r\n");
      out.write("				function() {\r\n");
      out.write("\r\n");
      out.write("					// 팝업창 url 로 id 값 보내기\r\n");
      out.write("					window.open(\r\n");
      out.write("							\"/idcheck.members?id=\" + $(\"#id\").val(),\r\n");
      out.write("							\"\", \"width=300,height=200\");\r\n");
      out.write("				})\r\n");
      out.write("\r\n");
      out.write("		// (유효성 검사) 회원가입 버튼 클릭시\r\n");
      out.write("		$(\"form\")\r\n");
      out.write("				.on(\r\n");
      out.write("						\"submit\",\r\n");
      out.write("						function() {\r\n");
      out.write("							// 정규식\r\n");
      out.write("							let regexId = /^[a-z0-9_]{4,12}$/;\r\n");
      out.write("							let regexPw = /^([a-zA-Z0-9]|[^a-zA-Z0-9\\s]){8,16}$/;\r\n");
      out.write("							let regexName = /^[a-zA-Z가-힣]{2,6}$/;\r\n");
      out.write("							let regexPhone = /^010[0-9]{8}$|^010-[0-9]{4}-[0-9]{4}$/;\r\n");
      out.write("							let regexEmail = /^[\\da-z_]{4,12}@[\\w]+(\\.com|\\.co\\.kr)$/;\r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("							// ID\r\n");
      out.write("							let id = $(\"#id\").val();\r\n");
      out.write("\r\n");
      out.write("							if (id == '') {\r\n");
      out.write("								alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("								$(\"#id\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							if (!regexId.test(id)) {\r\n");
      out.write("								alert(\"아이디 형식이 올바르지 않습니다.\\n영어 소문자, 숫자, _만 가능 (4 ~ 12자)\");\r\n");
      out.write("								$(\"#id\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							// PW\r\n");
      out.write("							let pw = $(\"#pw\").val();\r\n");
      out.write("							if (pw == \"\") {\r\n");
      out.write("								alert(\"패스워드를 입력해주세요.\");\r\n");
      out.write("								$(\"#pw\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							if (!regexPw.test(pw)) {\r\n");
      out.write("								alert(\"패스워드 형식이 올바르지 않습니다.\\n영문, 숫자, 특수문자 각 한글자 이상 포함 ( 8 ~ 16자 )\");\r\n");
      out.write("								$(\"#pw\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							if (!(/[a-zA-Z]/.test(pw) && /[\\d]/.test(pw) && /[^\\w\\s]/\r\n");
      out.write("									.test(pw))) {\r\n");
      out.write("								alert(\"영문, 숫자, 특수문자 각 한글자 이상 포함해야 됩니다. ( 8 ~ 16자 )\");\r\n");
      out.write("								$(\"#pw\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							// pw Check\r\n");
      out.write("							let pwCheck = $(\"#pwCheck\").val();\r\n");
      out.write("							if (pwCheck == \"\") {\r\n");
      out.write("								alert(\"패스워드를 다시 확인해주세요.\");\r\n");
      out.write("								$(\"#pwCheck\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							if (pwCheck != pw) {\r\n");
      out.write("								alert(\"입력한 패스워드와 일치하지 않습니다.\");\r\n");
      out.write("								$(\"#pwCheck\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							// 이름\r\n");
      out.write("							let name = $(\"#name\").val();\r\n");
      out.write("							if (name == \"\") {\r\n");
      out.write("								alert(\"이름을 입력해주세요.\");\r\n");
      out.write("								$(\"#name\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							if (!regexName.test(name)) {\r\n");
      out.write("								alert(\"이름 형식이 올바르지 않습니다.( 2 ~ 10자 )\");\r\n");
      out.write("								$(\"#name\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							// phone\r\n");
      out.write("							let phone = $(\"#phone\").val();\r\n");
      out.write("							if (phone == \"\") {\r\n");
      out.write("								alert(\"전화번호를 입력해주세요.\\n(예:01012341234 또는 010-1234-1234)\");\r\n");
      out.write("								$(\"#phone\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							if (!regexPhone.test(phone)) {\r\n");
      out.write("								alert(\"전화번호 형식이 맞지 않습니다.\\n(예:01012341234 또는 010-1234-1234)\");\r\n");
      out.write("								$(\"#phone\").focus();\r\n");
      out.write("								return false;\r\n");
      out.write("							}\r\n");
      out.write("\r\n");
      out.write("							// 이메일\r\n");
      out.write("							let email = $(\"#email\").val();\r\n");
      out.write("\r\n");
      out.write("							if (email != \"\") {\r\n");
      out.write("								if (!regexEmail.test(email)) {\r\n");
      out.write("									alert(\"이메일 형식이 올바르지 않습니다.\\n예시 : 영문 및 숫자@naver.com\\n예시2 : 영문 및 숫자@naver.co.kr\");\r\n");
      out.write("									$(\"#email\").focus();\r\n");
      out.write("									return false;\r\n");
      out.write("								}\r\n");
      out.write("							}\r\n");
      out.write("						})\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
