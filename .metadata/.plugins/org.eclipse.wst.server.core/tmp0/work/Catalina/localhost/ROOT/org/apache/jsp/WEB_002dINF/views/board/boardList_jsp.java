/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.108
 * Generated at: 2025-09-15 00:13:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/sts3_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Day04_Board_ju/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/sts3_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Day04_Board_ju/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1757403558891L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Title</title>\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n");
      out.write("          integrity=\"sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr\" crossorigin=\"anonymous\">\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("            integrity=\"sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q\"\n");
      out.write("            crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"\n");
      out.write("            integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/7.0.0/css/all.min.css\"\n");
      out.write("          integrity=\"sha512-DxV+EoADOkOygM4IR9yXP8Sb2qwgidEmeqAEmDKIOfPRQZOWbXCzLC6vjbZyy0vPisbH2SyW27+ddLVCN+OMzQ==\"\n");
      out.write("          crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"/>\n");
      out.write("    <link rel=\"stylesheet\" href=\"/boards/boardList.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"container\">\n");
      out.write("\n");
      out.write("    <nav class=\"navbar navbar-expand-lg\">\n");
      out.write("        <div class=\"container-fluid\">\n");
      out.write("            <a class=\"navbar-brand\" aria-current=\"page\" href=\"/\" style=\"color: #0d6dfb;\">Home</a>\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n");
      out.write("                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"/member/mypage\">회원 정보</a>\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("                <form class=\"d-flex\" action=\"/board/list\" method=\"get\">\n");
      out.write("                    <div class=\"input-group\">\n");
      out.write("                        <select class=\"form-select\" name=\"searchOpt\">\n");
      out.write("                            <option value=\"title\" selected>제목</option>\n");
      out.write("                            <option value=\"writer\">작성자</option>\n");
      out.write("                        </select>\n");
      out.write("                        <input class=\"form-control me-2\" name=\"search\" placeholder=\"검색어 입력\" aria-label=\"Search\"/>\n");
      out.write("                    </div>\n");
      out.write("                    <button class=\"btn btn-outline-success\"><i class=\"fa-solid fa-magnifying-glass\"></i></button>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("\n");
      out.write("    <table class=\"table\">\n");
      out.write("        <thead>\n");
      out.write("        <tr align=\"center\">\n");
      out.write("            <th></th>\n");
      out.write("            <th>제목</th>\n");
      out.write("            <th>작성자</th>\n");
      out.write("            <th>날짜</th>\n");
      out.write("            <th>조회</th>\n");
      out.write("        </tr>\n");
      out.write("        </thead>\n");
      out.write("        <tbody class=\"table-group-divider item-list-view\">\n");
      out.write("        <script>\n");
      out.write("            let postList = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("            let itemPerPage = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${itemPerPage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("\n");
      out.write("            if (postList.length === 0) {\n");
      out.write("                let emptyAlert = $(\"<td>\").attr({\n");
      out.write("                    \"colspan\": \"5\",\n");
      out.write("                    \"align\": \"center\"\n");
      out.write("                }).html(\"표시할 내용이 없습니다.\");\n");
      out.write("\n");
      out.write("                $(\".item-list-view\").append($(\"<tr>\").append(emptyAlert));\n");
      out.write("                for (let i = 0; i < itemPerPage - 1; i++) {\n");
      out.write("                    let emptyItem = $(\"<p>\").css(\"color\", \"transparent\");\n");
      out.write("                    let emptyItemTd = $(\"<td>\").attr(\"colspan\", \"5\");\n");
      out.write("                    $(\".item-list-view\").append($(\"<tr>\").append(emptyItemTd.append(emptyItem)));\n");
      out.write("                }\n");
      out.write("            } else {\n");
      out.write("                for (let post of postList) {\n");
      out.write("                    let tr = $(\"<tr>\").attr(\"align\", \"center\");\n");
      out.write("                    let seq = $(\"<td>\").attr(\"width\", \"5%\").html(post.id);\n");
      out.write("                    let title = $(\"<td>\").attr(\"width\", \"30%\").addClass(\"title\")\n");
      out.write("                        .append($(\"<a>\").attr({\n");
      out.write("                            \"title\": post.title,\n");
      out.write("                            \"href\": \"/board/item?id=\" + post.id\n");
      out.write("                        }).html(post.title));\n");
      out.write("                    let writer = $(\"<td>\").attr(\"width\", \"15%\").html(post.writer);\n");
      out.write("                    let writeDate = $(\"<td>\").attr(\"width\", \"30%\").html(milliToDate(post.writeDate));\n");
      out.write("                    let viewCount = $(\"<td>\").attr(\"width\", \"20%\").html(post.viewCount);\n");
      out.write("\n");
      out.write("                    $(\".item-list-view\").append(tr\n");
      out.write("                        .append(seq)\n");
      out.write("                        .append(title)\n");
      out.write("                        .append(writer)\n");
      out.write("                        .append(writeDate)\n");
      out.write("                        .append(viewCount));\n");
      out.write("                }\n");
      out.write("                if(postList.length % itemPerPage !== 0) {\n");
      out.write("                    for (let i = 0; i < itemPerPage - postList.length % itemPerPage; i++) {\n");
      out.write("                        let emptyItem = $(\"<p>\").css(\"color\", \"transparent\");\n");
      out.write("                        let emptyItemTd = $(\"<td>\").attr(\"colspan\", \"5\");\n");
      out.write("                        $(\".item-list-view\").append($(\"<tr>\").append(emptyItemTd.append(emptyItem)));\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function milliToDate(millis) {\n");
      out.write("                let date = new Date(millis);\n");
      out.write("                let year = date.getFullYear();\n");
      out.write("                let month = date.getMonth() + 1;\n");
      out.write("                let day = date.getDate();\n");
      out.write("\n");
      out.write("                return year + \".\" + month + \".\" + day;\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("        <tr>\n");
      out.write("            <td colspan=\"3\" id=\"navPos\">\n");
      out.write("                <script>\n");
      out.write("                    let params = new URLSearchParams(window.location.search);\n");
      out.write("\n");
      out.write("                    let maxPage = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maxPage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("                    let curPage = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${curPage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("                    let naviPerPage = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${naviPerPage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("\n");
      out.write("                    let searchOpt = params.get(\"searchOpt\");\n");
      out.write("                    let search = params.get(\"search\");\n");
      out.write("\n");
      out.write("                    if (maxPage > 1) {\n");
      out.write("                        let nav = $(\"<nav>\");\n");
      out.write("                        let ul = $(\"<ul>\").addClass(\"pagination\");\n");
      out.write("\n");
      out.write("                        let prevArrow = $(\"<li>\").addClass(\"page-item\");\n");
      out.write("                        let prevArrowLink = $(\"<a>\").addClass(\"page-link\");\n");
      out.write("\n");
      out.write("                        let nextArrow = $(\"<li>\").addClass(\"page-item\");\n");
      out.write("                        let nextArrowLink = $(\"<a>\").addClass(\"page-link\");\n");
      out.write("\n");
      out.write("                        if (curPage <= naviPerPage) {\n");
      out.write("                            prevArrow.addClass(\"disabled\");\n");
      out.write("                        }\n");
      out.write("\n");
      out.write("                        if (curPage > maxPage - naviPerPage) {\n");
      out.write("                            nextArrow.addClass(\"disabled\");\n");
      out.write("                        }\n");
      out.write("\n");
      out.write("                        let searchParams = \"\";\n");
      out.write("                        if (search != null) {\n");
      out.write("                            params += \"&searchOpt=\" + searchOpt;\n");
      out.write("                            params += \"&search=\" + search;\n");
      out.write("                        }\n");
      out.write("\n");
      out.write("                        let prevPageLast = Math.floor((curPage - 1) / naviPerPage) * naviPerPage;\n");
      out.write("                        let nextPageFirst = prevPageLast + naviPerPage + 1;\n");
      out.write("\n");
      out.write("                        prevArrowLink.attr(\"href\", \"?page=\" + prevPageLast + searchParams).html(\"&laquo;\");\n");
      out.write("                        nextArrowLink.attr(\"href\", \"?page=\" + nextPageFirst + searchParams).html(\"&raquo;\");\n");
      out.write("\n");
      out.write("                        prevArrow.append(prevArrowLink);\n");
      out.write("                        nextArrow.append(nextArrowLink);\n");
      out.write("\n");
      out.write("                        ul.append(prevArrow);\n");
      out.write("\n");
      out.write("                        let navFirstPage = Math.floor((curPage - 1) / naviPerPage) * naviPerPage + 1;\n");
      out.write("                        for (let i = navFirstPage; i < navFirstPage + naviPerPage; i++) {\n");
      out.write("                            if (i <= maxPage) {\n");
      out.write("                                let navItem = $(\"<li>\").addClass(\"page-item\");\n");
      out.write("                                let navLink = $(\"<a>\").addClass(\"page-link\");\n");
      out.write("\n");
      out.write("                                navLink.attr(\"href\", \"?page=\" + i + searchParams).html(i);\n");
      out.write("                                if (i === curPage) {\n");
      out.write("                                    navLink.addClass(\"active\");\n");
      out.write("                                }\n");
      out.write("                                navItem.append(navLink);\n");
      out.write("\n");
      out.write("                                ul.append(navItem);\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("\n");
      out.write("                        ul.append(nextArrow);\n");
      out.write("\n");
      out.write("                        nav.append(ul);\n");
      out.write("\n");
      out.write("                        $(\"#navPos\").append(nav);\n");
      out.write("                    }\n");
      out.write("                </script>\n");
      out.write("            </td>\n");
      out.write("            <td colspan=\"2\" align=\"right\">\n");
      out.write("                <div class=\"btn-group\" role=\"group\">\n");
      out.write("                    <button onclick=\"location.href='/'\" class=\"btn btn-secondary\">뒤로가기</button>\n");
      out.write("                    <button onclick=\"location.href='/board/postingform'\" class=\"btn btn-primary\">작성하기</button>\n");
      out.write("                </div>\n");
      out.write("            </td>\n");
      out.write("        </tr>\n");
      out.write("        </tbody>\n");
      out.write("    </table>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
